/**
\mainpage
\htmlinclude manifest.html

\section packageSummary Package Summary

	In addition to providing an overview of your package,
	this is the section where the specification and design/architecture 
	should be detailed. This is strictly a reference to the api and 
	usage of that api in its barest form. While it should strive to 
	be complete, it should not become unnecessarily burdened with usage
	ideas and notes. For that, create a wiki page for it in the appropriate
	stack (http://snorriheim.dnsdojo.com/redmine/wiki/ecl).

@section CompilingLinking Compiling & Linking

	Since the algorithms in slam are usually distinct, it is better to
	directly choose the algorithm header itself rather than a header for
	the whole package as is usually done in the ecl.

	@code
	// Ekf slam algorithm componets
	#include <ecl/slam/slam_ekf_base.hpp>
	#include <ecl/slam/slam_ekf/odometry_generic.hpp>
	#include <ecl/slam/slam_ekf/observation_generic.hpp>

	// The error interfaces
	using ecl::slam::SlamEkfBase;
	using ecl::slam::slam_ekf::GenericOdometryModel;
	using ecl::slam::slam_ekf::GenericObservationModel;
	@endcode

	Currently these are just templatised header classes so no linking is
	needed.

\section usage Usage

	This is very experimental at the moment, for now just check out the
	api as well as the slammer1d demo.

\section Demos

	- ecl_navigation_apps/src/demos/slammer1d.cpp

\section ChangeLog

	- <b>Feb 10</b> : our corner vision slammer tested with the slam-ekf base.
	- <b>Jan 10</b> : the design for the slam-ekf base worked through and established here.
*/
